{"version":3,"sources":["context.js","comps/header.js","comps/welcome.js","comps/Country.js","comps/AnimatedProgressProvider.js","comps/create.js","comps/create2.js","comps/add.js","comps/footer.js","comps/fraud.js","App.js","context-provider.js","serviceWorker.js","index.js","comps/front.module.css","media/world.svg","media/FootageOfSunsetView.mp4"],"names":["AppContext","React","createContext","Header","props","expand","variant","bg","to","Brand","alt","src","world","width","Toggle","aria-controls","Collapse","id","className","title","alignRight","Item","Divider","href","Front","autoPlay","loop","muted","classes","Video","vid","type","Content","size","CountryState","state","country","val","this","setState","region","name","value","valueType","onChange","selectCountry","priorityOptions","disabled","disable","required","Component","AnimatedProgressProvider","interval","undefined","isAnimated","repeat","window","setInterval","duration","clearInterval","start","valueStart","update","valueEnd","timing","ease","easingFunction","children","defaultProps","e","axios","require","score","patty","Create","CreateController","initialValues","Age","Snatch","CleanAndJerk","Country","Deadlift","MaxPullUps","FightGoneBad","validateOnChange","validateOnBlur","validate","values","console","log","onSubmit","actions","a","document","getElementById","options","selectedIndex","location_country","post","resp","data","parseFloat","toFixed","documentElement","scrollTop","Promise","resolve","setTimeout","setSubmitting","form","CreateForm","as","md","Body","isSubmitting","style","fontSize","color","animation","visibility","easeQuadInOut","styles","buildStyles","pathTransition","Input","rProps","Group","Label","Control","placeholder","field","display","maxLength","meta","touched","error","BackSquat","BodyWeight","Height","Footer","Date","getFullYear","Fraud","class","App","fluid","noGutters","exact","path","backgroundColor","position","left","bottom","AppProvider","campaigns","Provider","get","camp_resp","camp","percent_of_goal","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.76547b80.chunk.js","sourcesContent":["import React from 'react'\r\nconst AppContext = React.createContext()\r\nexport default AppContext","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\nimport world from \"../media/world.svg\"\r\n\r\n// import AppContext from './context'\r\n\r\n\r\nfunction Header(props) {\r\n    // const context = React.useContext(AppContext)\r\n\r\n    return (\r\n        <bs.Navbar expand=\"lg\" variant=\"light\" bg=\"secondary\">\r\n            <Link to=\"/\">\r\n                <bs.Navbar.Brand>\r\n                    <img alt=\"charitable\" src={world} width=\"50\" />\r\n                    Crossfit Predictor\r\n                </bs.Navbar.Brand>\r\n            </Link>\r\n            <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <bs.Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <bs.Nav className=\"mr-auto\">\r\n                    <Link to=\"/create2\" className=\"nav-link\">Women's Predictor &nbsp; |</Link>\r\n                    <Link to=\"/create\" className=\"nav-link\">Men's Predictor &nbsp; |</Link> \r\n                    <Link to=\"/fraud-detection\" className=\"nav-link\">Crossfit Workouts</Link>\r\n                    {/* <Link to=\"/add\" className=\"nav-link\">Add a Crossfit Record </Link>  */}\r\n                </bs.Nav>\r\n                <bs.Nav>\r\n                    <bs.Nav className=\"mr-auto pr-4\">\r\n                        <Link to=\"/cart\" className=\"nav-link\">\r\n                        </Link>\r\n                    </bs.Nav>\r\n                    <bs.NavDropdown title=\"Welcome, User\" alignRight>\r\n                        <bs.NavDropdown.Item>My Account</bs.NavDropdown.Item>\r\n                        <bs.NavDropdown.Divider />\r\n                        <bs.NavDropdown.Item href=\"#action/3.4\">Logout</bs.NavDropdown.Item>\r\n                    </bs.NavDropdown>\r\n                </bs.Nav>\r\n            </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\nimport vid from \"../media/FootageOfSunsetView.mp4\"\r\nimport classes from './front.module.css'\r\n\r\nfunction Front(props) {\r\n    return (\r\n        <div>\r\n            <video autoPlay=\"autoplay\" loop=\"loop\" muted width=\"auto\" className={classes.Video}>\r\n                <source src={vid} type=\"video/mp4\" />\r\n        Your browser does not support this video type\r\n        </video>\r\n\r\n            <div className={classes.Content}>\r\n                <div >\r\n                    <bs.Row >\r\n                        <h1>Welcome to the Crossfit Predictor</h1>\r\n                    </bs.Row>\r\n                    <bs.Row>&nbsp;</bs.Row>\r\n                    <bs.Row > \r\n                        <bs.Col >\r\n                        <Link to=\"/create2\">\r\n                            <bs.Button variant=\"outline-success\" size=\"lg\">Run Women's Prediction</bs.Button>\r\n                            </Link>\r\n                        </bs.Col>\r\n                        {/* <bs.Col>\r\n                        &nbsp;\r\n                    </bs.Col> */}\r\n                        <bs.Col>\r\n                            <Link to=\"/create\">\r\n                                <bs.Button variant=\"outline-success\" size=\"lg\">Run Men's Prediction</bs.Button>\r\n                            </Link>\r\n                        </bs.Col>\r\n                    </bs.Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Front\r\n","import React, { Component } from 'react';\r\n\r\n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \r\n// keep file size down\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\n\r\n\r\nclass CountryState extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = { country: props.country };\r\n  }\r\n\r\n  selectCountry (val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n\r\n  render () {\r\n    const { country, region } = this.state;\r\n    return (\r\n      <div>\r\n            <CountryDropdown\r\n              name=\"Country\"\r\n              id=\"cntry\"\r\n              value={country}\r\n              valueType=\"short\"\r\n              onChange={(val) => this.selectCountry(val)}\r\n              priorityOptions={[\"US\", \"CA\", \"GB\"]}\r\n              disabled={this.props.disable}\r\n              required={true} />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryState","import React from \"react\";\r\nimport { Animate } from \"react-move\";\r\n\r\nclass AnimatedProgressProvider extends React.Component {\r\n  interval = undefined;\r\n\r\n  state = {\r\n    isAnimated: false\r\n  };\r\n\r\n  static defaultProps = {\r\n    valueStart: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.repeat) {\r\n      this.interval = window.setInterval(() => {\r\n        this.setState({\r\n          isAnimated: !this.state.isAnimated\r\n        });\r\n      }, this.props.duration * 1000);\r\n    } else {\r\n      this.setState({\r\n        isAnimated: !this.state.isAnimated\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Animate\r\n        start={() => ({\r\n          value: this.props.valueStart\r\n        })}\r\n        update={() => ({\r\n          value: [\r\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\r\n          ],\r\n          timing: {\r\n            duration: this.props.duration * 1000,\r\n            ease: this.props.easingFunction\r\n          }\r\n        })}\r\n      >\r\n        {({ value }) => this.props.children(value)}\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimatedProgressProvider;\r\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport CountryState from './Country'\r\n// Animation\r\nimport { easeQuadInOut } from \"d3-ease\";\r\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst axios = require('axios')\r\n\r\n\r\n\r\nlet score = 0;\r\nlet patty = score\r\n\r\nlet e\r\nlet country\r\n\r\nexport default function Create(props) {\r\n    return (\r\n        <CreateController />\r\n    )\r\n}\r\nconst CreateController = props => {\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                Age: \"\",\r\n                Snatch: \"\",\r\n                CleanAndJerk: \"\",\r\n                Country: \"\",\r\n                Deadlift: \"\",\r\n                MaxPullUps: \"\",\r\n                FightGoneBad: \"\",\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                console.log('validating', values)\r\n\r\n                return errors\r\n            }}\r\n            onSubmit={handleSubmit, async (values, actions) => {\r\n                e = document.getElementById(\"cntry\")\r\n                country = e.options[e.selectedIndex].value\r\n                values.location_country = country\r\n\r\n                console.log('submit', values)\r\n                const resp = await axios.post('/api/predictm/', {\r\n                    values\r\n                    // enter in all the values\r\n                })\r\n                console.log(resp.data)\r\n                score = resp.data\r\n                score = parseFloat(score*100).toFixed(2)\r\n                patty = score + \"%\"\r\n\r\n                document.documentElement.scrollTop = 0;\r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve()\r\n\r\n                        actions.setSubmitting(false)\r\n                    }, 2000)\r\n                })\r\n            }}\r\n        >{form => (\r\n            <CreateForm form={form}/>)}</Formik>\r\n    )\r\n}\r\n\r\nconst CreateForm = props => (\r\n    <Form>\r\n        <bs.Container>\r\n            <bs.Card.Header as=\"h5\">Predict Men's Crossfit -- Will you make it into the games?</bs.Card.Header>\r\n            \r\n            {/* <bs.Row> &nbsp;</bs.Row> */}\r\n            <bs.Row>\r\n                <bs.Col md=\"10\">\r\n                    <bs.Card.Body>\r\n                        <Input title=\"Age:\" name=\"Age\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Snatch:\" name=\"Snatch\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Clean and Jerk:\" name=\"CleanAndJerk\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Dead lift:\" name=\"Deadlift\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Max Pull Ups:\" name=\"MaxPullUps\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Fight Gone Bad:\" name=\"FightGoneBad\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <span className=\"form-label\">Country:</span> <br />\r\n                        {/* {<Field names={['location_country','location_state']} component={CountryState}/>} */}\r\n                        {/* <CountryDropdown\r\n                            name=\"location_country\"\r\n                            value={props.values.location_country}\r\n                            valueType=\"short\"\r\n                            onChange={(_, e) => props.handleChange(e)} onBlur={props.handleBlur}\r\n                            priorityOptions={[\"US\", \"CA\", \"GB\"]}\r\n                            disabled={props.form.isSubmitting} /> */}\r\n                        <CountryState disable={props.form.isSubmitting}/><br/>\r\n                        {/* <span className=\"form-label\">Has a specific beneficiary been declared?</span> <br/>\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"Yes\" value=\"TRUE\" />\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"No\" value=\"FALSE\" />\r\n\r\n                        <br/><br/>\r\n                        <span className=\"form-label\">Campaign organizer type:</span><br/>\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Charitable Organization\" value=\"TRUE\" />\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Individual\" value=\"FALSE\" /><br/><br/>\r\n\r\n                        <Input title=\"Fundraising Goal (USD)\" name=\"goal_lnplus\" type=\"number\" disabled={props.form.isSubmitting} width=\"25%\" /> */}\r\n                        \r\n\r\n                        <Link to='/fraud-detection' className=\"ml-1\" style={{fontSize:\"13px\", color: \"blue\"}}>Workout Descriptions</Link>\r\n\r\n                    </bs.Card.Body>\r\n                    <bs.Button type=\"submit\" disabled={props.form.isSubmitting} className=\"mb-4 w-100 ml-3\">\r\n                        <bs.Spinner animation=\"border\" variant=\"success\" size=\"sm\" style={{ visibility: props.form.isSubmitting ? 'visible' : 'hidden' }} />\r\n                        &nbsp;  &nbsp; Predict\r\n                    </bs.Button> \r\n                    \r\n                </bs.Col>\r\n                <br/><br/>\r\n                <bs.Col md=\"2\">\r\n                <br/>\r\n                    <AnimatedProgressProvider valueStart={0} valueEnd={score} duration={1.4} easingFunction={easeQuadInOut}>\r\n                        {value => {\r\n                            return (\r\n                                <CircularProgressbarWithChildren value={value} /*   text={`${roundedValue}%`} */ styles={buildStyles({ pathTransition: \"none\" })}>\r\n                                    <div style={{\r\n                                        color: \"#3e98c7\", // dominantBaseline: \"left\",\r\n                                        fontSize: \"20px\", // textAnchor: \"left\"\r\n                                    }}>{patty} </div>\r\n                                </CircularProgressbarWithChildren>\r\n                            );\r\n                        }}\r\n                    </AnimatedProgressProvider><br/>\r\n                    {/* <span className=\"text-center form-label\"> Success Score: {parseFloat(score).toFixed(2)}</span> */}\r\n                    {/* <br/><Link to=\"/success-score\" style={{fontSize:\"13px\", color: \"blue\"}}>What determines success?</Link> */}\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    </Form>\r\n)\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                {...rProps.field}\r\n                disabled={props.disabled}\r\n                as={props.as}\r\n                style={{ display: \"block\", width: props.width, }}\r\n                maxLength={400}\r\n                \r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\n\r\n// const Radio = (props) => (\r\n//     <Field name={props.name}>{rProps => (\r\n//             <bs.Form.Check\r\n//                 inline\r\n//                 name={props.name}\r\n//                 type={props.type}\r\n//                 placeholder={props.placeholder}\r\n//                 {...rProps.field}\r\n//                 disabled={props.disabled}\r\n//                 label={props.label}\r\n//                 value={props.value}\r\n//             />\r\n//     )}</Field>\r\n// )\r\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport CountryState from './Country'\r\n// Animation\r\nimport { easeQuadInOut } from \"d3-ease\";\r\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst axios = require('axios')\r\n\r\nlet score = 0;\r\nlet patty = score\r\n\r\nlet e\r\nlet country\r\n\r\nexport default function Create(props) {\r\n    return (\r\n        <CreateController />\r\n    )\r\n}\r\nconst CreateController = props => {\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                Age: \"\",\r\n                Snatch: \"\",\r\n                CleanAndJerk: \"\",\r\n                BackSquat: \"\",\r\n                BodyWeight: \"\",\r\n                Country: \"\",\r\n                Deadlift: \"\",\r\n                MaxPullUps: \"\",\r\n                Height: \"\",\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                console.log('validating', values)\r\n\r\n                return errors\r\n            }}\r\n            onSubmit={handleSubmit, async (values, actions) => {\r\n                e = document.getElementById(\"cntry\")\r\n                country = e.options[e.selectedIndex].value\r\n                values.location_country = country\r\n\r\n                console.log('submit', values)\r\n                const resp = await axios.post('/api/predictw/', {\r\n                    values\r\n                    // enter in all the values\r\n                })\r\n                console.log(resp.data)\r\n                score = resp.data\r\n                score = parseFloat(score*100).toFixed(2)\r\n                patty = score + \"%\"\r\n\r\n                document.documentElement.scrollTop = 0;\r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve()\r\n\r\n                        actions.setSubmitting(false)\r\n                    }, 2000)\r\n                })\r\n            }}\r\n        >{form => (\r\n            <CreateForm form={form}/>)}</Formik>\r\n    )\r\n}\r\n\r\nconst CreateForm = props => (\r\n    <Form>\r\n        <bs.Container>\r\n            <bs.Card.Header as=\"h5\">Predict Women's Crossfit -- Will you make it into the games?</bs.Card.Header>\r\n            \r\n            {/* <bs.Row> &nbsp;</bs.Row> */}\r\n            <bs.Row>\r\n                <bs.Col md=\"10\">\r\n                    <bs.Card.Body>\r\n                    <Input title=\"Age:\" name=\"Age\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Snatch:\" name=\"Snatch\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Clean and Jerk:\" name=\"CleanAndJerk\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Back Squat:\" name=\"BackSquat\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Body Weight:\" name=\"BodyWeight\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Dead lift:\" name=\"Deadlift\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Max Pull Ups:\" name=\"MaxPullUps\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Height:\" name=\"Height\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <span className=\"form-label\">Country:</span> <br />\r\n                        {/* {<Field names={['location_country','location_state']} component={CountryState}/>} */}\r\n                        {/* <CountryDropdown\r\n                            name=\"location_country\"\r\n                            value={props.values.location_country}\r\n                            valueType=\"short\"\r\n                            onChange={(_, e) => props.handleChange(e)} onBlur={props.handleBlur}\r\n                            priorityOptions={[\"US\", \"CA\", \"GB\"]}\r\n                            disabled={props.form.isSubmitting} /> */}\r\n                        <CountryState disable={props.form.isSubmitting}/><br/>\r\n                        {/* <span className=\"form-label\">Has a specific beneficiary been declared?</span> <br/>\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"Yes\" value=\"TRUE\" />\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"No\" value=\"FALSE\" />\r\n\r\n                        <br/><br/>\r\n                        <span className=\"form-label\">Campaign organizer type:</span><br/>\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Charitable Organization\" value=\"TRUE\" />\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Individual\" value=\"FALSE\" /><br/><br/>\r\n\r\n                        <Input title=\"Fundraising Goal (USD)\" name=\"goal_lnplus\" type=\"number\" disabled={props.form.isSubmitting} width=\"25%\" />\r\n                         */}\r\n\r\n                        <Link to='/fraud-detection' className=\"ml-1\" style={{fontSize:\"13px\", color: \"blue\"}}>Workout Descriptions</Link>\r\n\r\n                    </bs.Card.Body>\r\n                    <bs.Button type=\"submit\" disabled={props.form.isSubmitting} className=\"mb-4 w-100 ml-3\">\r\n                        <bs.Spinner animation=\"border\" variant=\"success\" size=\"sm\" style={{ visibility: props.form.isSubmitting ? 'visible' : 'hidden' }} />\r\n                        &nbsp;  &nbsp; Predict\r\n                    </bs.Button> \r\n                    \r\n                </bs.Col>\r\n                <br/><br/>\r\n                <bs.Col md=\"2\">\r\n                <br/>\r\n                    <AnimatedProgressProvider valueStart={0} valueEnd={score} duration={1.4} easingFunction={easeQuadInOut}>\r\n                        {value => {\r\n                            return (\r\n                                <CircularProgressbarWithChildren value={value} /*   text={`${roundedValue}%`} */ styles={buildStyles({ pathTransition: \"none\" })}>\r\n                                    <div style={{\r\n                                        color: \"#3e98c7\", // dominantBaseline: \"left\",\r\n                                        fontSize: \"20px\", // textAnchor: \"left\"\r\n                                    }}>{patty} </div>\r\n                                </CircularProgressbarWithChildren>\r\n                            );\r\n                        }}\r\n                    </AnimatedProgressProvider><br/>\r\n                    {/* <span className=\"text-center form-label\"> Success Score: {parseFloat(score).toFixed(2)}</span> */}\r\n                    {/* <br/><Link to=\"/success-score\" style={{fontSize:\"13px\", color: \"blue\"}}>What determines success?</Link> */}\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    </Form>\r\n)\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                {...rProps.field}\r\n                disabled={props.disabled}\r\n                as={props.as}\r\n                style={{ display: \"block\", width: props.width, }}\r\n                maxLength={400}\r\n                \r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\n\r\n// const Radio = (props) => (\r\n//     <Field name={props.name}>{rProps => (\r\n//             <bs.Form.Check\r\n//                 inline\r\n//                 name={props.name}\r\n//                 type={props.type}\r\n//                 placeholder={props.placeholder}\r\n//                 {...rProps.field}\r\n//                 disabled={props.disabled}\r\n//                 label={props.label}\r\n//                 value={props.value}\r\n//             />\r\n//     )}</Field>\r\n// )\r\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\n//import { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n//import CountryState from './Country'\r\n// Animation\r\n//import { easeQuadInOut } from \"d3-ease\";\r\n//import AnimatedProgressProvider from \"./AnimatedProgressProvider\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst axios = require('axios')\r\n\r\nexport default function Create(props) {\r\n    return (\r\n        <CreateController />\r\n    )\r\n}\r\nconst CreateController = props => {\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                Country: \"US\",\r\n                Age: \"2\",\r\n                Height: \"54\",\r\n                BodyWeight: \"120\",\r\n                GamesQualify: \"TRUE\",\r\n                BackSquat: \"150\",\r\n                CleanAndJerk: \"120\",\r\n                Snatch: \"130\",\r\n                Deadlift: \"150\",\r\n                FightGoneBad: \"170\",\r\n                MaxPullUps: \"18\",\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                console.log('validating', values)\r\n\r\n                return errors\r\n            }}\r\n            onSubmit={handleSubmit, async (values, actions) => {\r\n\r\n                console.log('submit', values)\r\n                const resp = await axios.post('/api/men/', {\r\n                    Country: values.Country,\r\n                    Age: values.Age,\r\n                    Height: values.Height,\r\n                    BodyWeight: values.BodyWeight,\r\n                    GamesQualify: values.GamesQualify,\r\n                    BackSquat: values.BackSquat,\r\n                    CleanAndJerk: values.CleanAndJerk,\r\n                    Snatch: values.Snatch,\r\n                    Deadlift: values.Deadlift,\r\n                    FightGoneBad: values.FightGoneBad,\r\n                    MaxPullUps: values.MaxPullUps,\r\n                    // enter in all the values\r\n                })\r\n                console.log(resp)\r\n                document.documentElement.scrollTop = 0;\r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve()\r\n\r\n                        actions.setSubmitting(false)\r\n                    }, 2000)\r\n                })\r\n            }}\r\n        >{form => (\r\n            <CreateForm form={form}/>)}</Formik>\r\n    )\r\n}\r\n\r\nconst CreateForm = props => (\r\n    <Form>\r\n        <bs.Container>\r\n            <bs.Card.Header as=\"h5\">Predict Men's Crossfit -- Will you make it into the games?</bs.Card.Header>\r\n            \r\n            {/* <bs.Row> &nbsp;</bs.Row> */}\r\n            <bs.Row>\r\n                <bs.Col md=\"10\">\r\n                    <bs.Card.Body>\r\n                        <Input title=\"Country:\" name=\"Country\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Age:\" name=\"Age\" type=\"text\" />\r\n                        <Input title=\"Height:\" name=\"Height\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"BodyWeight:\" name=\"BodyWeight\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"GamesQualify:\" name=\"GamesQualify\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"BackSquat:\" name=\"BackSquat\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Snatch:\" name=\"Snatch\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"Deadlift:\" name=\"Deadlift\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"FightGoneBad:\" name=\"FightGoneBad\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"MaxPullUps:\" name=\"MaxPullUps\" type=\"text\" disabled={props.form.isSubmitting} />\r\n                        <Input title=\"CleanAndJerk:\" name=\"CleanAndJerk\" type=\"text\" disabled={props.form.isSubmitting} />\r\n\r\n                        {/* <span className=\"form-label\">Location:</span> <br />\r\n                         {<Field names={['location_country','location_state']} component={CountryState}/>} \r\n                         <CountryDropdown\r\n                            name=\"location_country\"\r\n                            value={props.values.location_country}\r\n                            valueType=\"short\"\r\n                            onChange={(_, e) => props.handleChange(e)} onBlur={props.handleBlur}\r\n                            priorityOptions={[\"US\", \"CA\", \"GB\"]}\r\n                            disabled={props.form.isSubmitting} /> \r\n                        <CountryState disable={props.form.isSubmitting}/><br/>\r\n                        <span className=\"form-label\">Has a specific beneficiary been declared?</span> <br/>\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"Yes\" value=\"TRUE\" />\r\n                        <Radio name=\"has_beneficiary\" type=\"radio\" label=\"No\" value=\"FALSE\" />\r\n\r\n                        <br/><br/>\r\n                        <span className=\"form-label\">Campaign organizer type:</span><br/>\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Charitable Organization\" value=\"TRUE\" />\r\n                        <Radio name=\"is_charity\" type=\"radio\" label=\"Individual\" value=\"FALSE\" /><br/><br/>\r\n\r\n                        <Input title=\"Fundraising Goal (USD)\" name=\"goal_lnplus\" type=\"number\" disabled={props.form.isSubmitting} width=\"25%\" />\r\n                         */}\r\n\r\n                        <Link to='/fraud-detection' className=\"ml-1\" style={{fontSize:\"13px\", color: \"blue\"}}>Workout Descriptions</Link>\r\n\r\n                    </bs.Card.Body>\r\n                    <bs.Button type=\"submit\" disabled={props.form.isSubmitting} className=\"mb-4 w-100 ml-3\">\r\n                        <bs.Spinner animation=\"border\" variant=\"success\" size=\"sm\" style={{ visibility: props.form.isSubmitting ? 'visible' : 'hidden' }} />\r\n                        &nbsp;  &nbsp; Predict\r\n                    </bs.Button> \r\n                    \r\n                </bs.Col>\r\n                <br/><br/>\r\n                <bs.Col md=\"2\">\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    </Form>\r\n)\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                {...rProps.field}\r\n                disabled={props.disabled}\r\n                as={props.as}\r\n                style={{ display: \"block\", width: props.width, }}\r\n                maxLength={400}\r\n                \r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\n\r\n// const Radio = (props) => (\r\n//     <Field name={props.name}>{rProps => (\r\n//             <bs.Form.Check\r\n//                 inline\r\n//                 name={props.name}\r\n//                 type={props.type}\r\n//                 placeholder={props.placeholder}\r\n//                 {...rProps.field}\r\n//                 disabled={props.disabled}\r\n//                 label={props.label}\r\n//                 value={props.value}\r\n//             />\r\n//     )}</Field>\r\n// )\r\n","import React from 'react'\r\nexport default function Footer(props)\r\n{\r\n    return( \r\n        <div className=\"text-center\">\r\n            Crossfit Predictor  &copy; {new Date().getFullYear()}\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nexport default function Fraud(props) {\r\n  return (\r\n    <bs.Row>\r\n                <bs.Col md='1'></bs.Col>\r\n                <bs.Col md='10'>\r\n    <div>\r\n      <bs.Card.Header as=\"h2\">CrossFit Workouts</bs.Card.Header>\r\n      <br /><br />\r\n      <h3><b>CrossFit Workouts</b></h3>\r\n      <h6>Filthy Fifty </h6>\r\n      <h6>Fight Gone Bad</h6>\r\n      <h6>Fran</h6>\r\n      <h6>Grace</h6>\r\n      <h6>Helen</h6>\r\n      <br /><br />\r\n      <h5><b>Filthy Fifty: </b></h5>\r\n      <h6>50 Box Jumps (24/20 in)</h6>\r\n      <h6>50 Jumping Pull-Ups</h6>\r\n      <h6>50 Kettlebell Swings (1/.75 pood)</h6>\r\n      <h6>50 Walking Lunge Steps</h6>\r\n      <h6>50 Knees-to-Elbows</h6>\r\n      <h6>50 Push Presses (45/35 lb)</h6>\r\n      <h6>50 Back Extensions</h6>\r\n      <h6>50 Wall Ball Shots (20/14 lb)</h6>\r\n      <h6>50 Burpees</h6>\r\n      <h6>50 Double-Unders</h6>\r\n      <br />\r\n      <h5><b>Fight Gone Bad: </b></h5>\r\n      <h6>3 Rounds For Total Reps in 17 minutes</h6>\r\n      <h6>1 minute Wall Ball Shots (20/14 lb)</h6>\r\n      <h6>1 minute Sumo Deadlift High-Pulls (75/55 lb)</h6>\r\n      <h6>1 minute Box Jumps (20 in)</h6>\r\n      <h6>1 minute Push Press (75/55 lb)</h6>\r\n      <h6>1 minute Row (calories)</h6>\r\n      <h6>1 minute Rest</h6>\r\n      <br />\r\n      <h5><b>Fran: </b></h5>\r\n      <h6>Perform 21 thrusters followed by 21 pull-ups, 15 thrusters followed by 15 pull-ups, and 9 thrusters followed by 9 pull-ups. As fast as humanly possible.</h6>\r\n      <br />\r\n      <h5><b>Grace: </b></h5>\r\n      <h6>Grace is a CrossFit Girl benchmark workout (WOD). Grace is also one of the best known CrossFit workouts. It is just 30 cleans and jerks for time with 135 lbs for men and 95 lbs for women.</h6>\r\n      <br/><h5><b>Helen: </b></h5>\r\n      <h6>As fast as humanly possible, perform three rounds of a 400m sprint, 21 kettlebell swings (24kg) and 12 pull ups.</h6>\r\n      <br /><br /><br /><br />\r\n      <div class=\"text-center\">\r\n        <h3>Helpful CrossFit Links</h3>\r\n        <br />\r\n        <a href=\"https://games.crossfit.com/leaderboard/open/2021?view=0&division=1&scaled=0&sort=0\"><bs.Button>Crossfit Leaderboard</bs.Button></a>         <a href=\"https://www.crossfit.com/\"><bs.Button>Crossfit Home Page</bs.Button></a>\r\n      </div>\r\n      <br /><br /><br />\r\n      <div class=\"text-bottom\">NOTE: All of the information and workouts on this page are provided by WodWell. For more information, visit <a href=\"https://wodwell.com/wods/?sort=popular\">www.wodwell.com</a>.</div>\r\n      <br />\r\n    </div>\r\n    </bs.Col>\r\n    </bs.Row>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport './index.scss';\r\nimport Header from './comps/header'\r\n//import Table from './comps/search'\r\nimport Front from './comps/welcome'\r\n//import Campaign from './comps/camp-details'\r\nimport Create from './comps/create'\r\nimport Create2 from './comps/create2'\r\nimport Add from './comps/add'\r\nimport Footer from './comps/footer'\r\n//import CampaignBooster from './comps/campaignBooster'\r\n//import SuccessScore from './comps/successScore'\r\nimport Fraud from './comps/fraud'\r\n//import Modify from './comps/createAnalysts'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\r\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 border-bottom shadow-sm\" bg=\"secondary\">\r\n          <bs.Col >\r\n            {/*className=\"px-3 py-2\"*/}\r\n            <Header />\r\n          </bs.Col>\r\n        </bs.Row>\r\n        <bs.Row noGutters className=\"flex-grow-1\">\r\n          {/* <bs.Col md=\"1\" className=\"px-3 py-4 border-right\">\r\n        <LeftCol />\r\n      </bs.Col> */}\r\n          <bs.Col >\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Front />\r\n              </Route>\r\n              {/* <Route path=\"/search\">\r\n                <Table />\r\n              </Route>\r\n              <Route path={`/camp/:cid`}>\r\n                <Campaign />\r\n              </Route> */}\r\n              <Route path=\"/create\">\r\n                <Create />\r\n              </Route>\r\n              <Route path=\"/create2\">\r\n                <Create2 />\r\n              </Route>\r\n              {/* <Route path=\"/add\">\r\n                <Add />\r\n              </Route> */}\r\n              {/* <Route path={`/modify/:cid`}>\r\n                <Modify />\r\n              </Route>\r\n              <Route path=\"/boost-camp\">\r\n                <CampaignBooster />\r\n              </Route>\r\n              <Route path=\"/success-score\" >\r\n                <SuccessScore />\r\n              </Route> */}\r\n              <Route path=\"/fraud-detection\">\r\n                <Fraud />\r\n              </Route>\r\n            </Switch>\r\n          </bs.Col>\r\n          {/* <bs.Col md=\"1\" className=\"px-3 py-4 border-right\">\r\n        <LeftCol />\r\n      </bs.Col> */}\r\n        </bs.Row>\r\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\r\n          <bs.Col style={{ backgroundColor: \"#CEECEF\", }} className=\"px-3 py-2\">\r\n            <Footer style={{ position: \"fixed\", left: 0, bottom: 0 }} />\r\n          </bs.Col>\r\n\r\n        </bs.Row>\r\n      </bs.Container>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport AppContext from './context'\r\nimport App from './App'\r\n\r\n\r\nexport default class AppProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {}\r\n        this.state = {\r\n            campaigns: {},\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}} >\r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const camp_resp = await axios.get('/api/campaign/')\r\n            const campaigns = {}\r\n            for (const camp of camp_resp.data){\r\n                campaigns[camp.id] = camp\r\n                campaigns[camp.id].percent_of_goal = campaigns[camp.id].percent_of_goal * 100\r\n            }\r\n\r\n            this.setState({\r\n                campaigns: campaigns,\r\n            })\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\n// import App from './App';\r\nimport AppProvider from './context-provider'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  // </React.StrictMode>\r\n  \r\n  <AppProvider />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"front_Container__zIeoa\",\"Video\":\"front_Video__P-A3z\",\"Content\":\"front_Content__yf_VR\",\"SubContent\":\"front_SubContent__2BaO3\"};","module.exports = __webpack_public_path__ + \"static/media/world.cb5c3e41.svg\";","module.exports = __webpack_public_path__ + \"static/media/FootageOfSunsetView.8d4ce80b.mp4\";"],"sourceRoot":""}